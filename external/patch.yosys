diff -bBdNrw -U5 '--exclude=*.orig' '--exclude=.git' '--exclude=.svn' '--exclude=esesc.xcode' '--exclude=CVS' '--exclude=CVSmain' '--exclude=cscope.files' '--exclude=cscope.out' '--exclude=ChangeLog' /home/renau/projs/synth/yosys/passes/equiv/equiv_make.cc ./passes/equiv/equiv_make.cc
--- ./passes/equiv/equiv_make.cc	2020-12-27 20:18:02.461496713 -0800
+++ ./passes/equiv/equiv_make.cc	2020-12-16 23:12:16.453932687 -0800
@@ -149,10 +149,22 @@
 		SigMap rd_signal_map;
 
 		// list of cells without added $equiv cells
 		auto cells_list = equiv_mod->cells().to_vector();
 
+    std::set<const RTLIL::Wire *> signed_wire;
+
+    for (auto cell : cells_list) {
+      if (cell->type.in(ID($pos), ID($add), ID($mul), ID($and), ID($or), ID($xor), ID($sub))) {
+        bool is_signed = cell->getParam(ID::A_SIGNED).as_bool(); // || cell->type == ID($sub);
+        if (is_signed) {
+          const RTLIL::Wire *wire = cell->getPort(ID::Y).chunks()[0].wire;
+          signed_wire.insert(wire);
+        }
+      }
+    }
+
 		for (auto id : wire_names)
 		{
 			IdString gold_id = id.str() + "_gold";
 			IdString gate_id = id.str() + "_gate";
 
@@ -224,11 +236,11 @@
 
 				rd_signal_map.add(assign_map(gate_wire), enc_wire);
 				gate_wire = dec_wire;
 			}
 
-			if (gold_wire == nullptr || gate_wire == nullptr || gold_wire->width != gate_wire->width) {
+			if (gold_wire == nullptr || gate_wire == nullptr) {
 				if (gold_wire && gold_wire->port_id)
 					log_error("Can't match gold port `%s' to a gate port.\n", log_id(gold_wire));
 				if (gate_wire && gate_wire->port_id)
 					log_error("Can't match gate port `%s' to a gold port.\n", log_id(gate_wire));
 				continue;
@@ -236,10 +248,46 @@
 
 			log("Presumably equivalent wires: %s (%s), %s (%s) -> %s\n",
 					log_id(gold_wire), log_signal(assign_map(gold_wire)),
 					log_id(gate_wire), log_signal(assign_map(gate_wire)), log_id(id));
 
+      if (gold_wire->width > gate_wire->width) {
+        char name[gate_wire->name.str().size()+32];
+
+        auto w2 = RTLIL::SigSpec(gate_wire);
+        if (signed_wire.count(gate_wire)) {
+          sprintf(name, "%s_sext", gate_wire->name.c_str());
+          w2.extend_u0(gold_wire->width, true);  // sign extend
+        }else{
+          sprintf(name, "%s_zext", gate_wire->name.c_str());
+          w2.extend_u0(gold_wire->width, false);  // zero extend
+        }
+
+        RTLIL::IdString id_name(name);
+        RTLIL::Wire *wire =  equiv_mod->addWire(id_name, gold_wire->width);
+        equiv_mod->connect(wire, w2);
+
+        gate_wire = wire;
+      }else if (gold_wire->width < gate_wire->width) {
+        char name[gate_wire->name.str().size()+32];
+
+        auto w2 = RTLIL::SigSpec(gold_wire);
+        if (signed_wire.count(gold_wire)) {
+          sprintf(name, "%s_sext", gold_wire->name.c_str());
+          w2.extend_u0(gate_wire->width, true);  // sign extend
+        }else{
+          sprintf(name, "%s_zext", gold_wire->name.c_str());
+          w2.extend_u0(gate_wire->width, false);  // zero extend
+        }
+
+        RTLIL::IdString id_name(name);
+        RTLIL::Wire *wire =  equiv_mod->addWire(id_name, gate_wire->width);
+        equiv_mod->connect(wire, w2);
+
+        gold_wire = wire;
+      }
+
 			if (gold_wire->port_output || gate_wire->port_output)
 			{
 				Wire *wire = equiv_mod->addWire(id, gold_wire->width);
 				wire->port_output = true;
 				gold_wire->port_input = false;
diff -bBdNrw -U5 '--exclude=*.orig' '--exclude=.git' '--exclude=.svn' '--exclude=esesc.xcode' '--exclude=CVS' '--exclude=CVSmain' '--exclude=cscope.files' '--exclude=cscope.out' '--exclude=ChangeLog' /home/renau/projs/synth/yosys/passes/sat/miter.cc ./passes/sat/miter.cc
--- ./passes/sat/miter.cc	2020-12-27 20:18:02.469496574 -0800
+++ ./passes/sat/miter.cc	2020-12-27 20:15:13.096322079 -0800
@@ -84,12 +84,10 @@
 			goto match_gold_port_error;
 		if (gold_wire->port_input != gate_wire->port_input)
 			goto match_gold_port_error;
 		if (gold_wire->port_output != gate_wire->port_output)
 			goto match_gold_port_error;
-		if (gold_wire->width != gate_wire->width)
-			goto match_gold_port_error;
 		continue;
 	match_gold_port_error:
 		log_cmd_error("No matching port in gate module was found for %s!\n", gold_wire->name.c_str());
 	}
 
@@ -101,12 +99,10 @@
 			goto match_gate_port_error;
 		if (gate_wire->port_input != gold_wire->port_input)
 			goto match_gate_port_error;
 		if (gate_wire->port_output != gold_wire->port_output)
 			goto match_gate_port_error;
-		if (gate_wire->width != gold_wire->width)
-			goto match_gate_port_error;
 		continue;
 	match_gate_port_error:
 		log_cmd_error("No matching port in gold module was found for %s!\n", gate_wire->name.c_str());
 	}
 
